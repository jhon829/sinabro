version: '3.8'

services:
  # PostgreSQL 데이터베이스
  db:
    image: postgres:15
    container_name: sinabro_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sinabro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: sinabro_redis
    ports:
      - "6379:6379"
    networks:
      - sinabro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI 애플리케이션
  api:
    build: .
    container_name: sinabro_api
    environment:
      - DB_NAME=sinabro_db
      - DB_USER=sinabro_user
      - DB_PASSWORD=sinabro_G4EkzbJzIecqoQ8r_2024
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=aks*Md1*$^2Vzi*0w&0EvkiRpiIZa$fx4FPm3$Si#&DN%enB0j6qm!NF1tc4dbiD
      - ALGORITHM=HS256
      - DATABASE_URL=postgresql://sinabro_user:sinabro_G4EkzbJzIecqoQ8r_2024@db:5432/sinabro_db
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./uploads:/app/uploads
    networks:
      - sinabro_network
    restart: unless-stopped
    # 개발 중에는 주석 제거
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # pgAdmin (데이터베이스 관리 도구)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sinabro_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - sinabro_network
    restart: unless-stopped

networks:
  sinabro_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
